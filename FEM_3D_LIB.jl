using LinearAlgebra

function TriangleArea3D(M)
    # M is a matrix [x1 x2 x3; y1 y2 y3; z1 z2 z3]
    x = M[1,:]
    y = M[2,:]
    z = M[3,:]
    vx = (y[3] - y[1])*(z[2] - z[1]) - (z[3] - z[1])*(y[2] - y[1])
    vy = (z[3] - z[1])*(x[2] - x[1]) - (x[3] - x[1])*(z[2] - z[1])
    vz = (x[3] - x[1])*(y[2] - y[1]) - (y[3] - y[1])*(x[2] - x[1])
    A = √((vx)^2 + (vy)^2 + (vz)^2) / 2
    return A
end

function ∂N∂ξ_func(ξ₁, ξ₂, ξ₃)
    return [1 0 0; 0 1 0; 0 0 1; -1 -1 -1]
end

function Nξ_func(ξ₁, ξ₂, ξ₃)
    return [ξ₁, ξ₂, ξ₃, 1-ξ₁-ξ₂-ξ₃]
end

function ∇N∇Nᵀ_func(ξ₁, ξ₂, ξ₃, X)
    ∂N∂ξ = ∂N∂ξ_func(ξ₁, ξ₂, ξ₃)
    J = X * ∂N∂ξ
    J⁻¹ = inv(J)
    ∇N = ∂N∂ξ * J⁻¹
    ∇N∇Nᵀ = ∇N * ∇N'
    return ∇N∇Nᵀ * abs(det(J))
end

function N_func(ξ₁, ξ₂, ξ₃, X)
    ∂N∂ξ = ∂N∂ξ_func(ξ₁, ξ₂, ξ₃)
    J = X * ∂N∂ξ
    return Nξ_func(ξ₁, ξ₂, ξ₃) * abs(det(J))
end

function integral(points, func)
    I = 0
    for i = 1:length(points)-1
        I = I + (func[i] + func[i+1]) * (points[i+1] - points[i]) / 2
    end
    return I
end

function integral2D(f, n, L=1)
    xs = 0:(L/(n-1)):L
    Fx = zeros(n)
    for (i, x) in enumerate(xs)
        if i != n
            lim = L-x
            ys = 0:(lim/(n-1)):lim
            Fx[i] = integral(ys, f.(x, ys))
        end
    end
    return integral(xs, Fx)
end

function integral3D(f, n)
    xs = 0:(1/(n-1)):1
    Fx = zeros(n)
    for (i, x) in enumerate(xs)
        if i != n
            lim_y = 1-x
            g(y,z) = f(x,y,z)
            Fx[i] = integral2D(g, n, lim_y)
        end
    end
    return integral(xs, Fx)
end

function tetra_quadrature(f, dim, weights, xs, ys, zs)
    S = zeros(dim)
    for (w, x, y, z) in zip(weights, xs, ys, zs)
        S .+= f(x,y,z) * w
    end
    return S
end

function get_tetra_quadrature_data(order)
    if order == 1
        xs = [0.5854101966249685, 0.1381966011250105, 0.1381966011250105, 0.1381966011250105]
        ys = [0.1381966011250105, 0.1381966011250105, 0.1381966011250105, 0.5854101966249685]
        zs = [0.1381966011250105, 0.1381966011250105, 0.5854101966249685, 0.1381966011250105]
        weights = [0.2500000000000000, 0.2500000000000000, 0.2500000000000000, 0.2500000000000000]
    elseif order == 2
        xs= [0.2500000000000000, 0.5000000000000000, 0.1666666666666667, 0.1666666666666667, 0.1666666666666667]
        ys= [0.2500000000000000, 0.1666666666666667, 0.1666666666666667, 0.1666666666666667, 0.5000000000000000]
        zs= [0.2500000000000000, 0.1666666666666667, 0.1666666666666667, 0.5000000000000000, 0.1666666666666667]
        weights= [-0.8000000000000000, 0.4500000000000000, 0.4500000000000000, 0.4500000000000000, 0.4500000000000000]
    elseif order == 3
        xs= [0.2500000000000000, 0.7857142857142857, 0.0714285714285714, 0.0714285714285714, 0.0714285714285714, 
        0.1005964238332008, 0.3994035761667992, 0.3994035761667992, 0.3994035761667992, 0.1005964238332008, 0.1005964238332008]
        ys= [0.2500000000000000, 0.0714285714285714, 0.0714285714285714, 0.0714285714285714, 0.7857142857142857, 
        0.3994035761667992, 0.1005964238332008, 0.3994035761667992, 0.1005964238332008, 0.3994035761667992, 0.1005964238332008]
        zs= [0.2500000000000000, 0.0714285714285714, 0.0714285714285714, 0.7857142857142857, 0.0714285714285714, 
        0.3994035761667992, 0.3994035761667992, 0.1005964238332008, 0.1005964238332008, 0.1005964238332008, 0.3994035761667992]
        weights=[-0.0789333333333333, 0.0457333333333333, 0.0457333333333333, 0.0457333333333333, 0.0457333333333333, 
        0.1493333333333333, 0.1493333333333333, 0.1493333333333333, 0.1493333333333333, 0.1493333333333333, 0.1493333333333333]
    elseif order == 4
        xs=[0.2500000000000000, 0.0000000000000000, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 
        0.7272727272727273, 0.0909090909090909, 0.0909090909090909, 0.0909090909090909, 0.4334498464263357, 
        0.0665501535736643, 0.0665501535736643, 0.0665501535736643, 0.4334498464263357, 0.4334498464263357]
        ys=[0.2500000000000000, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.0000000000000000, 
        0.0909090909090909, 0.0909090909090909, 0.0909090909090909, 0.7272727272727273, 0.0665501535736643, 
        0.4334498464263357, 0.0665501535736643, 0.4334498464263357, 0.0665501535736643, 0.4334498464263357]
        zs=[0.2500000000000000, 0.3333333333333333, 0.3333333333333333, 0.0000000000000000, 0.3333333333333333, 
        0.0909090909090909, 0.0909090909090909, 0.7272727272727273, 0.0909090909090909, 0.0665501535736643, 
        0.0665501535736643, 0.4334498464263357, 0.4334498464263357, 0.4334498464263357, 0.0665501535736643]
        weights=[0.1817020685825351, 0.0361607142857143, 0.0361607142857143, 0.0361607142857143, 0.0361607142857143, 
        0.0698714945161738, 0.0698714945161738, 0.0698714945161738, 0.0698714945161738, 0.0656948493683187, 
        0.0656948493683187, 0.0656948493683187, 0.0656948493683187, 0.0656948493683187, 0.0656948493683187]
    end
    weights = weights / 6
    return weights, xs, ys, zs
end
